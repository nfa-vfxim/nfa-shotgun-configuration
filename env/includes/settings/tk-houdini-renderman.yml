# MIT License

# Copyright (c) 2021 Netherlands Film Academy

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

################################################################################

includes:
  - ../app_locations.yml
################################################################################

settings.tk-houdini-renderman.asset_step:
  work_file_template: houdini_asset_work
  output_render_template: houdini_asset_render
  deadline_batch_name: deadline_asset_batch_name
  post_task_script: C:/pipeline/shotgrid/tk-houdini-renderman/post_task_script.py
  render_metadata:
    - { key: camera, type: string, expression: chsop("camera"), group: camera }
    - { key: pixelVariance, type: float, expression: ch("ri_Ri_PixelVariance"), group: renderer }
    - { key: maxSamples, type: int, expression: ch("ri_hider_maxsamples"), group: renderer }
    - { key: renderer, type: string, expression: chs("renderer_variant"), group: renderer }
    - { key: integrator, type: string, expression: chs("integrator"), group: renderer }
    - { key: hipfile, type: string, expression: $HIPFILE, group: scene }
    - { key: fps, type: string, expression: $FPS, group: scene }
  location: "@apps.tk-houdini-renderman.location"

settings.tk-houdini-renderman.shot_step:
  work_file_template: houdini_shot_work
  output_render_template: houdini_shot_render
  deadline_batch_name: deadline_shot_batch_name
  post_task_script: C:/pipeline/shotgrid/tk-houdini-renderman/post_task_script.py
  render_metadata:
    - { key: camera, type: string, expression: chsop("camera"), group: camera }
    - { key: pixelVariance, type: float, expression: ch("ri_Ri_PixelVariance"), group: renderer }
    - { key: maxSamples, type: int, expression: ch("ri_hider_maxsamples"), group: renderer }
    - { key: renderer, type: string, expression: chs("renderer_variant"), group: renderer }
    - { key: integrator, type: string, expression: chs("integrator"), group: renderer }
    - { key: hipfile, type: string, expression: $HIPFILE, group: scene }
    - { key: fps, type: string, expression: $FPS, group: scene }
  location: "@apps.tk-houdini-renderman.location"
