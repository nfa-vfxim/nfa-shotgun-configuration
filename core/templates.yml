# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.

#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
  Sequence:
    type: str
  Shot:
    type: str
  Step:
    type: str
  sg_asset_type:
    type: str
  Asset:
    type: str
  Projectcode:
    type: str
    shotgun_entity_type: Project
    shotgun_field_name: sg_projectcode
  name:
    type: str
    filter_by: alphanumeric
  iteration:
    type: int
  version:
    type: int
    format_spec: "03"
  version_four:
    type: int
    format_spec: "04"
    alias: version
  timestamp:
    type: str
  width:
    type: int
  height:
    type: int
  colorspace:
    type: int

  # Represents the optional output name for frames written by the ShotGrid Write Node
  write.output:
    alias: output
    type: str
    filter_by: alphanumeric

  # Represents the optional output name for frames written by the After Effects Publish Rendering Plugin
  afx.comp:
    alias: comp
    type: str
    filter_by: alphanumeric
  afx.mov.ext:
    alias: extension
    type: str
    choices:
      mov: Quicktime Movie (.mov)
      avi: Audio Video Interleaved (.avi)

  SEQ:
    type: sequence
    format_spec: "04"


  eye:
    type: str

  houdini.node:
    alias: node
    type: str
  aov_name:
    type: str

  # these are used by the Hiero exporter and pipeline
  YYYY:
    type: int
    format_spec: "04"
  MM:
    type: int
    format_spec: "02"
  DD:
    type: int
    format_spec: "02"
    alias: DD
  project:
    type: str
  fileext:
    type: str

  # These are used for the Mari UDIM pipeline:
  UDIM:
    type: sequence
    default: "<UDIM>"
  mari.channel:
    type: str
    alias: channel
  mari.layer:
    type: str
    alias: layer
  mari.project_name:
    type: str
    alias: name
  asset_name:
    type: str
    shotgun_entity_type: Asset
    shotgun_field_name: code
  task_name:
    type: str
    shotgun_entity_type: Task
    shotgun_field_name: content

  # Maya supports two extension types.
  maya_extension:
    type: str
    choices:
      ma: Maya Ascii (.ma)
      mb: Maya Binary (.mb)
    default: ma
    alias: extension

  # Photoshop supports two file extensions because of file sizes.
  photoshop_extension:
    type: str
    choices:
      psd: Photoshop Document (.psd)
      psb: Photoshop Big (.psb)
    default: psd
    alias: extension

  # Substance supports two extension types.
  texture_extension:
    type: str
    alias: extension
    
  channel:
    type: str


  # These are used by the Loader in Unreal
  ue_sg_asset_type:
      type: str
      shotgun_entity_type: Asset
      shotgun_field_name: sg_asset_type
  ue_sg_asset_name:
      type: str
      shotgun_entity_type: Asset
      shotgun_field_name: code
  ue_sg_shot_name:
      type: str
      shotgun_entity_type: Shot
      shotgun_field_name: code
  ue_sg_sequence_name:
      type: str
      shotgun_entity_type: Shot
      shotgun_field_name: sg_sequence
  # These are used by the Movie Publish in Unreal
  ue_level_sequence:
      type: str
  ue_world:
      type: str
  # Movie extension for UE, avi on Windows, mov on other platforms
  ue_mov_ext:
      type: str
      choices:
          mov: Quicktime Movie (.mov)
          avi: Audio Video Interleaved (.avi)

#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:
  # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
  # templates. This also makes it easy to change any of the common root paths and have the
  # changes apply to all templates that use them.
  #
  # These don't require the standard formatting (with definition and root_name) because they
  # will be set within each template that uses the alias.
  asset_root: 03_workfiles/assets/{Asset}/{Step}
  shot_root: 03_workfiles/shots/{Sequence}/{Shot}/{Step}

  sequence_root: 03_workfiles/shots/{Sequence}

  asset_publish: 04_publish/assets/{Asset}/{Step}
  shot_publish: 04_publish/shots/{Sequence}/{Shot}/{Step}

  asset_render_publish: 05_renders/assets/{Asset}/{Step}
  shot_render_publish: 05_renders/shots/{Sequence}/{Shot}/{Step}

  delivery: 05_renders/delivery

  ##########################################################################################
  # Project level paths
  #

  #
  # Shot Delivery Path
  #

  shot_delivery:
    definition: "@delivery/{Projectcode}_sc{Sequence}_{Shot}_v{version}/{Projectcode}_sc{Sequence}_{Shot}_v{version}.{SEQ}.exr"


  #
  # Hiero
  #

  # The location of WIP files
  hiero_project_work:
    definition: "02_source/editorial/{Projectcode}_{name}_v{version}.hrox"
  hiero_project_work_area:
    definition: "02_source/editorial/"
  # The location of backups of WIP files
  hiero_project_snapshot:
    definition: "02_source/editorial/snapshots/{Projectcode}_{name}_v{version}_{timestamp}.hrox"
  # The location of published hiero files
  hiero_project_publish:
    definition: "02_source/editorial/publish/{Projectcode}_{name}_v{version}.hrox"
  hiero_project_publish_area:
    definition: "02_source/editorial/publish"

  #
  # Houdini
  #
  houdini_splash_screen:
    definition: "00_pipeline/houdini/splash_screen.jpg"

  ##########################################################################################

  # OCIO config path
  ocio_config:
    definition: "00_pipeline/ocio/config.ocio"

  ##########################################################################################

  # USD paths
  usd_asset_publish:
    definition: "@asset_publish/usd/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.usd"
  usd_shot_publish:
    definition: "@shot_publish/usd/{name}/v{version}/{Projectcode}_{Shot}_{Step}_{name}_v{version}.usd"

  ##########################################################################################

  # Template files
  nuke_template_file:
    definition: "00_pipeline/nuke/template/ShotGridTemplate.nk"

  houdini_template_directory:
    definition: "00_pipeline/houdini/templates"

  ##########################################################################################

  # OTL files
  houdini_otls:
    definition: "00_pipeline/houdini/otls"

  ##########################################################################################

  # OBJ Sculpts Standalone Publish Template
  obj_asset_publish:
    definition: "@asset_publish/obj/{Projectcode}_{Asset}_{Step}_pub_v{version}.obj"

  ##########################################################################################
  # Sequence level paths
  #

  ##########################################################################################
  # Shot level paths
  #

  # Review files
  shot_review_maya:
    definition: "@shot_root/maya/previews/{name}/{Projectcode}_{Sequence}_{Shot}_{name}_sRGB_v{version}.mov"
  shot_review_houdini:
    definition: "@shot_root/houdini/previews/{name}/{Projectcode}_{Sequence}_{Shot}_{name}_sRGB_v{version}.mov"

  #
  # Photoshop
  #

  # The location of WIP files
  photoshop_shot_work:
    definition: "@shot_root/photoshop/{Projectcode}_{Sequence}_{Shot}_{Step}_work_{name}_v{version}.{photoshop_extension}"
  shot_work_area_photoshop:
    definition: "@shot_root/photoshop"
  # The location of backups of WIP files
  photoshop_shot_snapshot:
    definition: "@shot_root/photoshop/snapshots/{Projectcode}_{Sequence}_{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.{photoshop_extension}"
  # The location of published files
  shot_publish_area_photoshop:
    definition: "@shot_publish/photoshop"
  photoshop_shot_publish:
    definition: "@shot_publish/photoshop/{Projectcode}_{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.{photoshop_extension}"

  #
  # After Effects
  #

  # The location of WIP files
  aftereffects_shot_work:
    definition: "@shot_root/ae/{Projectcode}_{Sequence}_{Shot}_{Step}_work_{name}_v{version}.aep"
  shot_work_area_aftereffects:
    definition: "@shot_root/ae"
  # The location of backups of WIP files
  aftereffects_shot_snapshot:
    definition: "@shot_root/ae/snapshots/{Projectcode}_{Sequence}_{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.aep"
  # The location of published files
  shot_publish_area_aftereffects:
    definition: "@shot_publish/ae"
  aftereffects_shot_publish:
    definition: "@shot_publish/ae/{Projectcode}_{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.aep"
  aftereffects_shot_render_pub_mono:
    definition: "@shot_render_publish/ae/{name}/{afx.comp}/render/v{version}/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{afx.comp}_v{version}.{SEQ}.tif"
  # The following template uses {afx.mov.ext} this is a special key, that will be only there
  # in the beta to support different extensions on mac and windows, while using the same
  # output module (Lossless with Alpha)
  aftereffects_shot_render_movie:
    definition: "@shot_root/ae/previews/{name}/{afx.comp}/{Projectcode}_{Sequence}_{Shot}_{name}_{afx.comp}_v{version}.{afx.mov.ext}"

  #
  # Maya
  #

  # define the location of a work area
  shot_work_area_maya:
    definition: "@shot_root/maya"
  # define the location of a publish area
  shot_publish_area_maya:
    definition: "@shot_publish/maya"
  # The location of WIP files
  maya_shot_work:
    definition: "@shot_root/maya/scenes/{Projectcode}_sc{Sequence}_{Shot}_{Step}_work_{name}_v{version}.{maya_extension}"
  # The location of backups of WIP files
  maya_shot_snapshot:
    definition: "@shot_root/maya/snapshots/{Projectcode}_sc{Sequence}_{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.{maya_extension}"
  # The location of playblasts
  maya_shot_playblast:
    definition: "@shot_root/maya/previews/{name}/{Projectcode}_{Sequence}_{Shot}_{name}_v{version}.mov"
  # The location of published maya files
  maya_shot_publish:
    definition: "@shot_publish/maya/{Projectcode}_sc{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.{maya_extension}"
  # Alembic
  maya_shot_abc:
    definition: "@shot_publish/abc/{name}/v{version}/{Projectcode}_{Shot}_{Step}_{name}_v{version}.abc"

  #
  # Houdini
  #

  # define the location of a work area
  shot_work_area_houdini:
    definition: "@shot_root/houdini"
  # define the location of a publish area
  shot_publish_area_houdini:
    definition: "@shot_publish/houdini"
  # The location of WIP files
  houdini_shot_work:
    definition: "@shot_root/houdini/{Projectcode}_sc{Sequence}_{Shot}_{Step}_work_{name}_v{version}.hipnc"
  # The location of backups of WIP files
  houdini_shot_snapshot:
    definition: "@shot_root/houdini/snapshots/{Projectcode}_sc{Sequence}_{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.hipnc"
  # The location of published houdini files
  houdini_shot_publish:
    definition: "@shot_publish/houdini/{Projectcode}_sc{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.hipnc"
  # Alembic caches
  houdini_shot_work_alembic_cache:
    definition: "@shot_root/houdini/cache/alembic/{houdini.node}/v{version}/{Projectcode}_sc{Sequence}_{Shot}_{Step}_work_{name}_v{version}.abc"
#    root_name: "render" # Place on source until can be published from render to source
  # Fbx caches
  houdini_shot_work_fbx_cache:
    definition: "@shot_root/houdini/cache/fbx/{houdini.node}/v{version}/{Projectcode}_sc{Sequence}_{Shot}_{Step}_work_{name}_v{version}.fbx"
#    root_name: "render" # Place on source until can be published from render to source
  # File work caches
  houdini_shot_work_file_cache:
    definition: "@shot_root/houdini/cache/bgeo/{name}/v{version}/{Projectcode}_sc{Sequence}_{Shot}_{Step}_work_{name}_v{version}.{SEQ}.bgeo"
    root_name: "render"
  # File publish caches
  houdini_shot_publish_file_cache:
    definition: "@shot_publish/cache/bgeo/{name}/v{version}/{Projectcode}_sc{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.{SEQ}.bgeo"

  # Rendered images
  houdini_shot_render:
    definition: "@shot_root/houdini/renders/{name}/{write.output}/v{version}/[{aov_name}/]{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_[{aov_name}_]v{version}.{SEQ}.exr"
    root_name: "render"
  houdini_shot_render_pub:
    definition: "@shot_render_publish/houdini/{name}/{write.output}/render/v{version}/[{aov_name}/]{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_[{aov_name}_]v{version}.{SEQ}.exr"
  houdini_shot_render_review:
    definition: "@shot_render_publish/houdini/{name}/{write.output}/review/v{version}/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_v{version}.{SEQ}.exr"
  houdini_shot_render_movie:
    definition: "@shot_render_publish/houdini/{name}/{write.output}/mov/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_sRGB_v{version}.mov"

  # Additional outputs
  houdini_shot_extra_plane:
    definition: "@shot_root/houdini/renders/{name}/extra/v{version}/{aov_name}/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{aov_name}_v{version}.{SEQ}.exr"
    root_name: "render"

  houdini_shot_ifd:
    definition: "@shot_root/houdini/ifds/{name}/v{version}/{Projectcode}_{Sequence}_{Shot}_{name}_v{version}.{SEQ}.ifd"
    root_name: "render"

  houdini_shot_dcm:
    definition: "@shot_root/houdini/dcms/{name}/v{version}/{Projectcode}_{Sequence}_{Shot}_{name}_v{version}.{SEQ}.dcm"
    root_name: "render"

  houdini_shot_ass:
    definition: "@shot_root/houdini/ass/{name}/v{version}/{Projectcode}_{Sequence}_{Shot}_{name}_v{version}.{SEQ}.ass"
    root_name: "render"


  #
  # Motionbuilder
  #

  # define the location of a work area
  shot_work_area_mobu:
    definition: "@shot_root/mobu"
  # define the location of a publish area
  shot_publish_area_mobu:
    definition: "@shot_publish/mobu"
  # The location of WIP files
  mobu_shot_work:
    definition: "@shot_root/mobu/{Projectcode}_{Sequence}_{Shot}_{Step}_work_{name}_v{version}.fbx"
  # The location of backups of WIP files
  mobu_shot_snapshot:
    definition: "@shot_root/mobu/snapshots/{Projectcode}_{Sequence}_{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.fbx"
  # The location of published mobu files
  mobu_shot_publish:
    definition: "@shot_publish/mobu/{Projectcode}_{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.fbx"

  #
  # Nuke
  #

  # define the location of a work area
  shot_work_area_nuke:
    definition: "@shot_root/nuke"
  # define the location of a publish area
  shot_publish_area_nuke:
    definition: "@shot_publish/nuke"
  # The location of WIP script files
  nuke_shot_work:
    definition: "@shot_root/nuke/{Projectcode}_sc{Sequence}_{Shot}_{Step}_work_{name}_v{version}.nk"
  # The location of backups of WIP files
  nuke_shot_snapshot:
    definition: "@shot_root/nuke/snapshots/{Projectcode}_sc{Sequence}_{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.nk"
  # The location of published nuke script files
  nuke_shot_publish:
    definition: "@shot_publish/nuke/{Projectcode}_sc{Sequence}_{Shot}_{Step}_pub_{name}_v{version}.nk"
  # Write node outputs
  nuke_shot_render:
    definition: "@shot_root/nuke/renders/{name}/{write.output}/v{version}/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_v{version}.{SEQ}.exr"
    root_name: "render"
  nuke_shot_render_pub:
    definition: "@shot_render_publish/nuke/{name}/{write.output}/render/v{version}/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_v{version}.{SEQ}.exr"
  nuke_shot_tiff_render_work:
    definition: "@shot_root/nuke/renders/{name}/{write.output}/v{version}/{Projectcode}_{Sequence}_{Shot}_{name}_{write.output}_v{version}.{SEQ}.tiff"
    root_name: "render"
  nuke_shot_tiff_render_pub:
    definition: "@shot_render_publish/nuke/{name}/{write.output}/render/v{version}/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_v{version}.{SEQ}.tiff"
  # Review output
  shot_quicktime_quick:
    definition: "@shot_root/nuke/previews/{name}/{Projectcode}_{Sequence}_{Shot}_{name}_{write.output}_sRGB_v{version}_{iteration}.mov"
  nuke_shot_render_movie:
    definition: "@shot_render_publish/nuke/{name}/{write.output}/mov/{Projectcode}_{Sequence}_{Shot}_{Step}_{name}_{write.output}_sRGB_v{version}.mov"

  #
  # Hiero
  #

  # export of shot asset data from hiero
  hiero_plate_path:
    definition: "02_source/sc{Sequence}/{Shot}/p{version}/plates/ref/{Projectcode}_sc{Sequence}_{Shot}_reference_p{version}.mov"
  hiero_render_path:
    definition: "02_source/sc{Sequence}/{Shot}/p{version}/renders/{Projectcode}_sc{Sequence}_{Shot}_v{version}.{SEQ}.exr"
  hiero_copy_path:
    definition: "02_source/sc{Sequence}/{Shot}/p{version}/plates/{fileext}/{Projectcode}_sc{Sequence}_{Shot}_plate_p{version}.{SEQ}.{fileext}"

  ##########################################################################################
  # Asset pipeline

  # Review files
  asset_review_maya:
    definition: "@asset_root/maya/previews/{name}/{Projectcode}_{Asset}_{Step}_{name}_sRGB_v{version}.mov"
  asset_review_houdini:
    definition: "@asset_root/houdini/previews/{name}/{Projectcode}_{Asset}_{Step}_{name}_sRGB_v{version}.mov"

  #
  # Photoshop
  #

  # The location of WIP files
  photoshop_asset_work:
    definition: "@asset_root/photoshop/{Projectcode}_{Asset}_{Step}_work_{name}_v{version}.{photoshop_extension}"
  asset_work_area_photoshop:
    definition: "@asset_root/photoshop"
  # The location of backups of WIP files
  photoshop_asset_snapshot:
    definition: "@asset_root/photoshop/snapshots/{name}.v{version}.{timestamp}.{photoshop_extension}"
  # The location of published files
  asset_publish_area_photoshop:
    definition: "@asset_publish/photoshop"
  photoshop_asset_publish:
    definition: "@asset_publish/photoshop/{Projectcode}_{Asset}_{Step}_pub_{name}_v{version}.{photoshop_extension}"

  #
  # After Effects
  #

  # The location of WIP files
  aftereffects_asset_work:
    definition: "@asset_root/ae/{Projectcode}_{Asset}_{Step}_work_v{version}.aep"
  asset_work_area_aftereffects:
    definition: "@asset_root/ae"
  # The location of backups of WIP files
  aftereffects_asset_snapshot:
    definition: "@asset_root/ae/snapshots/{Projectcode}_{Asset}_{Step}_snap_v{version}_{timestamp}.aep"
  # The location of published files
  asset_publish_area_aftereffects:
    definition: "@asset_publish/ae"
  aftereffects_asset_publish:
    definition: "@asset_publish/ae/{Projectcode}_{Asset}_{Step}_pub_v{version}.aep"
  aftereffects_asset_render_pub_mono:
    definition: "@asset_render_publish/ae/{name}/{afx.comp}/render/v{version}/{Projectcode}_{Asset}_{Step}_{name}_{afx.comp}_v{version}.{SEQ}.tif"
  # The following template uses {afx.mov.ext} this is a special key, that will be only there
  # in the beta to support different extensions on mac and windows, while using the same
  # output module (Lossless with Alpha)
  aftereffects_asset_render_movie:
    definition: "@asset_root/ae/previews/{name}/{afx.comp}/{Projectcode}_{Asset}_{name}_{afx.comp}_v{version}.{afx.mov.ext}"

  #
  # Mari
  #
  asset_mari_texture_tif:
    definition: "@asset_publish/mari/{name}_{mari.channel}[_{mari.layer}].v{version}.{UDIM}.tif"

  #
  # Maya
  #

  # define the location of a work area
  asset_work_area_maya:
    definition: "@asset_root/maya"
  # define the location of a publish area
  asset_publish_area_maya:
    definition: "@asset_publish/maya"
  # The location of WIP files
  maya_asset_work:
    definition: "@asset_root/maya/scenes/{Projectcode}_{Asset}_{Step}_{name}_work_v{version}.{maya_extension}"
  # The location of backups of WIP files
  maya_asset_snapshot:
    definition: "@asset_root/maya/snapshots/{Projectcode}_{Asset}_{Step}_{name}_snap_v{version}_{timestamp}.{maya_extension}"
  # The location of published maya files
  maya_asset_publish:
    definition: "@asset_publish/maya/{Projectcode}_{Asset}_{Step}_{name}_pub_v{version}.{maya_extension}"
  # Alembic
  maya_asset_abc:
    definition: "@asset_publish/abc/{Projectcode}_{Asset}_{Step}_{name}_v{version}.abc"

  #
  # Houdini
  #

  # define the location of a work area
  asset_work_area_houdini:
    definition: "@asset_root/houdini"
  # define the location of a publish area
  asset_publish_area_houdini:
    definition: "@asset_publish/houdini"
  # The location of WIP files
  houdini_asset_work:
    definition: "@asset_root/houdini/{Projectcode}_{Asset}_{Step}_work_{name}_v{version}.hipnc"
  # The location of backups of WIP files
  houdini_asset_snapshot:
    definition: "@asset_root/houdini/snapshots/{Projectcode}_{Asset}_{Step}_snap_{name}_v{version}_{timestamp}.hipnc"
  # The location of published houdini files
  houdini_asset_publish:
    definition: "@asset_publish/houdini/{Projectcode}_{Asset}_{Step}_{name}_pub_{name}_v{version}.hipnc"
  # Alembic caches
  houdini_asset_work_alembic_cache:
    definition: "@asset_root/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{Projectcode}_{Asset}_{Step}_work_v{version}.abc"
#    root_name: "render" # Place on source until can be published from render to source
  # fbx caches
  houdini_asset_work_fbx_cache:
    definition: "@asset_root/houdini/cache/fbx/{name}/{houdini.node}/v{version}/{Projectcode}_{Asset}_{Step}_work_v{version}.fbx"
#    root_name: "render" # Place on source until can be published from render to source
  # File work caches
  houdini_asset_work_file_cache:
    definition: "@asset_root/houdini/cache/bgeo/{name}/v{version}/{Projectcode}_{Asset}_{Step}_work_{name}_v{version}.{SEQ}.bgeo"
    root_name: "render"
  # File publish caches
  houdini_asset_publish_file_cache:
    definition: "@asset_publish/cache/bgeo/{name}/v{version}/{Projectcode}_{Asset}_{Step}_pub_{name}_v{version}.{SEQ}.bgeo"

  # Rendered images
  houdini_asset_render:
    definition: "@asset_root/houdini/renders/{name}/{write.output}/v{version}/[{aov_name}/]{Projectcode}_{Asset}_{Step}_{name}_{write.output}_[{aov_name}_]v{version}.{SEQ}.exr"
    root_name: "render"
  houdini_asset_render_pub:
    definition: "@asset_render_publish/houdini/{name}/{write.output}/render/v{version}/[{aov_name}/]{Projectcode}_{Asset}_{Step}_{name}_{write.output}_[{aov_name}_]v{version}.{SEQ}.exr"
  houdini_asset_render_review:
    definition: "@asset_render_publish/houdini/{name}/{write.output}/review/v{version}/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_v{version}.{SEQ}.exr"
  houdini_asset_render_movie:
    definition: "@asset_render_publish/houdini/{name}/{write.output}/mov/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_sRGB_v{version}.mov"

  # Additional outputs
  houdini_asset_extra_plane:
    definition: "@asset_root/houdini/renders/{name}/extra/v{version}/{aov_name}/{Projectcode}_{Asset}_{Step}_{name}_{aov_name}_v{version}.{SEQ}.exr"
    root_name: "render"

  houdini_asset_ifd:
    definition: "@asset_root/houdini/ifds/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.{SEQ}.ifd"
    root_name: "render"

  houdini_asset_dcm:
    definition: "@asset_root/houdini/dcms/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.{SEQ}.dcm"
    root_name: "render"

  houdini_asset_ass:
    definition: "@asset_root/houdini/ass/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.{SEQ}.ass"
    root_name: "render"


  #
  # Motionbuilder
  #

  # define the location of a work area
  asset_work_area_mobu:
    definition: "@asset_root/mobu"
  # define the location of a publish area
  asset_publish_area_mobu:
    definition: "@asset_publish/mobu"
  # The location of WIP files
  mobu_asset_work:
    definition: "@asset_root/mobu/{Projectcode}_{Asset}_{Step}_{name}_work_v{version}.fbx"
  # The location of backups of WIP files
  mobu_asset_snapshot:
    definition: "@asset_root/mobu/snapshots/{Projectcode}_{Asset}_{Step}_{name}_snap_v{version}_{timestamp}.fbx"
  # The location of published Motionbuilder files
  mobu_asset_publish:
    definition: "@asset_publish/mobu/{Projectcode}_{Asset}_{Step}_{name}_pub_v{version}.fbx"

  #
  # Nuke
  #

  # define the location of a work area
  asset_work_area_nuke:
    definition: "@asset_root/work/nuke"
  # define the location of a publish area
  asset_publish_area_nuke:
    definition: "@asset_root/publish"
  # outputs from the Shotgun Write Node for assets
  nuke_asset_render:
    definition: "@asset_root/nuke/renders/{name}/{write.output}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_v{version}.{SEQ}.exr"
    root_name: "render"
  nuke_asset_render_pub:
    definition: "@asset_render_publish/nuke/{name}/{write.output}/render/v{version}/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_v{version}.{SEQ}.exr"
  nuke_asset_tiff_render:
    definition: "@asset_root/nuke/renders/{name}/{write.output}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_v{version}.{SEQ}.tiff"
    root_name: "render"
  nuke_asset_tiff_render_pub:
    definition: "@asset_render_publish/nuke/{name}/{write.output}/render/v{version}/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_v{version}.{SEQ}.tiff"

  # review output
  nuke_asset_render_movie:
    definition: "@asset_render_publish/nuke/{name}/{write.output}/mov/{Projectcode}_{Asset}_{Step}_{name}_{write.output}_sRGB_v{version}.mov"
  asset_quicktime_quick:
    definition: "@asset_render_publish/nuke/{name}/{write.output}/mov/{Projectcode}_{Asset}_{Step}_{name}_{iteration}.mov"
  # The location of WIP script files
  nuke_asset_work:
    definition: "@asset_root/nuke/{Projectcode}_{Asset}_{Step}_{name}_work_v{version}.nk"
  # The location of backups of WIP files
  nuke_asset_snapshot:
    definition: "@asset_root/nuke/snapshots/{Projectcode}_{Asset}_{Step}_{name}_snap_v{version}_{timestamp}.nk"
  # The location of published nuke script files
  nuke_asset_publish:
    definition: "@asset_publish/nuke/{Projectcode}_{Asset}_{Step}_{name}_pub_v{version}.nk"

  #
  # Substance Painter
  #

  # asset
  # define the location of a work area
  asset_work_area_substancepainter:
    definition: "@asset_root/substancepainter"
  # define the location of a publish area
  asset_publish_area_substancepainter:
    definition: "@asset_publish/substancepainter"
  # The location of WIP files
  substancepainter_asset_work:
    definition: "@asset_root/substancepainter/{Projectcode}_{Asset}_{Step}_work_{name}_v{version}.spp"
  # The location of backups of WIP files
  substancepainter_asset_snapshot:
    definition: "@asset_root/substancepainter/snapshots/{Projectcode}_{Asset}_{Step}_snap_{name}_v{version}.{timestamp}.spp"
  # The folder where the textures are exported for a project
  substancepainter_asset_textures_path_export:
    definition: "@asset_root/substancepainter/textures/v{version}/{name}_v{version}"
  # The location of published substance painter files
  substancepainter_asset_publish:
    definition: "@asset_publish/substancepainter/{Projectcode}_{Asset}_{Step}_pub_{name}_v{version}.spp"
  # a texture folder publish
  substancepainter_asset_textures_path_publish:
    definition: "@asset_publish/textures/v{version}/{name}_v{version}"
  # a texture folder publish
  substancepainter_asset_texture_path_publish:
    definition: "@asset_publish/textures/v{version}/{Projectcode}_{Asset}_{channel}_v{version}.{texture_extension}"

  #
  # Unreal
  #

  # level sequence review output from unreal
  unreal.movie_publish:
    definition: "05_renders/unreal/shots/[{Sequence}/][{Shot}/]{YYYY}_{MM}_{DD}/{ue_level_sequence}_{ue_world}.v{version}.{ue_mov_ext}"
  unreal_shot_publish:
    definition: "@shot_publish/unreal/{name}_v{version}.nk"
  # The location of FBX exports for Unreal
  unreal.maya_asset_fbx_publish:
    definition: "@asset_publish/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.fbx"
  # The location of turntable review output rendered in Unreal
  unreal.maya_turntable_render:
    definition: "@asset_root/unreal/renders/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.{ue_mov_ext}"
    root_name: "render"
  unreal.maya_turntable_publish:
    definition: "@asset_render_publish/unreal/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.{ue_mov_ext}"
  # Placeholder location for static mesh assets exported from Unreal
  # Hook implementation intended to be a starting point for a pipeline
  # No context info used in template, developers expected to further customize
  unreal.asset_publish:
      definition: "@asset_publish/unreal/exports/{YYYY}_{MM}_{DD}/{name}.fbx"



#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:
  # Nuke
  # when a review Version in Shotgun is created inside of Nuke, this is the
  # name that is being given to it (the code field)
  nuke_shot_version_name: "{Sequence}_{Shot}_[{Step}_]_nuke_{name}_{write.output}_[{colorspace}_]v{version}[.{iteration}]"
  nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

  nuke_asset_version_name: "{Asset}_[{Step}_]_nuke_{name}_{write.output}_[{colorspace}_]v{version}[.{iteration}]"
  nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

  # Houdini
  houdini_asset_version_name: "{Asset}_[{Step}_]_houdini_{name}_{write.output}_[{colorspace}_]v{version}"
  houdini_shot_version_name: "{Sequence}_{Shot}_[{Step}_]_houdini_{name}_{write.output}_[{colorspace}_]v{version}"

  # defines how the {tk_version} token in Hiero gets formatted back to tk.
  hiero_version: "{version}"

  # define how new Mari projects should be named
  mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"

  # Unreal
  # entity-specific templates for importing files into the Unreal content browser
  # template logic is defined in Python, not settings:
  # tk-unreal/hooks/tk-multi-loader2/tk-unreal_actions.py
  unreal_loader_asset_path: "/Game/Assets/{ue_sg_asset_type}/{ue_sg_asset_name}/"
  unreal_loader_asset_name: "{ue_sg_asset_name}_{name}"
  unreal_loader_shot_path: "/Game/Cinematics/Sequences/{ue_sg_sequence_name}/{ue_sg_shot_name}/"
  unreal_loader_shot_name: "{ue_sg_shot_name}_{name}"
  unreal_loader_project_path: "/Game/Assets/"
  unreal_loader_project_name: "{name}"
