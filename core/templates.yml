# Copyright (c) 2015 Shotgun Software Inc.
#
# CONFIDENTIAL AND PROPRIETARY
#
# This work is provided "AS IS" and subject to the Shotgun Pipeline Toolkit
# Source Code License included in this distribution package. See LICENSE.
# By accessing, using, copying or modifying this work you indicate your
# agreement to the Shotgun Pipeline Toolkit Source Code License. All rights
# not expressly granted therein are reserved by Shotgun Software Inc.

#
# This file is one of the central points in the Shotgun Pipeline Toolkit configuration and
# a counterpart to the folder configuration structure.
#
# The folder structure underneath the project folder is used to create folders on disk -
# templates.yml (this file) refers to those folders. Therefore, the two files need to be
# in sync. This file contains an overview of all locations that are used by Sgtk.
#
# Whenever an app or an engine refers to a location on disk, it is using an entry defined in
# this file. For more information, see the Shotgun Pipeline Toolkit Documentation.



#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
    Sequence:
        type: str
    Shot:
        type: str
    Step:
        type: str
    sg_asset_type:
        type: str
    Asset:
        type: str
    projectcode:
        type: str
        shotgun_entity_type: Project
        shotgun_field_name: sg_projectcode
    name:
        type: str
        filter_by: alphanumeric
    iteration:
        type: int
    version:
        type: int
        format_spec: "03"
    version_four:
       type: int
       format_spec: "04"
       alias: version
    timestamp:
        type: str
    width:
        type: int
    height:
        type: int
    segment_name:
        type: str

    # Represents the optional output name for frames written by the Shotgun Write Node
    nuke.output:
        alias: output
        type: str
        filter_by: alphanumeric

    # Represents the optional output name for frames written by the After Effects Publish Rendering Plugin
    afx.comp:
        alias: comp
        type: str
        filter_by: alphanumeric
    afx.mov.ext:
        alias: extension
        type: str
        choices:
            mov: Quicktime Movie (.mov)
            avi: Audio Video Interleaved (.avi)

    SEQ:
        type: sequence
        format_spec: "04"

    # Represents a frame sequence exported from Flame
    flame.frame:
        type: sequence
        format_spec: "08"

    eye:
        type: str

    houdini.node:
        alias: node
        type: str
    aov_name:
        type: str

    # these are used by the Hiero exporter and pipeline
    YYYY:
        type: int
        format_spec: "04"
    MM:
        type: int
        format_spec: "02"
    DD:
        type: int
        format_spec: "02"
        alias: DD
    project:
        type: str

    # These are used for the Mari UDIM pipeline:
    UDIM:
        type: sequence
        default: "<UDIM>"
    mari.channel:
        type: str
        alias: channel
    mari.layer:
        type: str
        alias: layer
    mari.project_name:
        type: str
        alias: name
    asset_name:
        type: str
        shotgun_entity_type: Asset
        shotgun_field_name: code
    task_name:
        type: str
        shotgun_entity_type: Task
        shotgun_field_name: content

    # Maya supports two extension types.
    maya_extension:
        type: str
        choices:
            ma: Maya Ascii (.ma)
            mb: Maya Binary (.mb)
        default: ma
        alias: extension

    # Vred supports three extension types
    vred.extension:
        type: str
        choices:
            vpe: VRED Essentials Project Binary (*.vpe)
            vpb: VRED Project Binary (*.vpb)
            vpf: VRED Project File (*.vpf)
        default: vpb

    # represents the optional render pass for frames written by VRED
    vred.render_pass:
        type: str
        filter_by: alphanumeric

    # represents the image extension for frames written by VRED
    vred.render_extension:
        type: str
        choices:
            png: PNG Image
            exr: EXR Image
        default: png

    # Represents a frame sequence exported from VRED
    vred.frame:
        type: sequence
        format_spec: "05"
        alias: SEQ


#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:

    # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
    # templates. This also makes it easy to change any of the common root paths and have the
    # changes apply to all templates that use them.
    #
    # These don't require the standard formatting (with definition and root_name) because they
    # will be set within each template that uses the alias.
    asset_root: 03_workfiles/assets/{Asset}/{Step}
    shot_root: 03_workfiles/shots/{Sequence}/{Shot}/{Step}

    sequence_root: 03_workfiles/shots/{Sequence}

    asset_publish: 04_publish/01_assets/{Asset}/{Step}
    shot_publish: 04_publish/02_shots/{Sequence}/{Shot}/{Step}

    alembic_caches_pub: 04_publish/03_caches/{Asset}/{Step}

    asset_review: 05_review/assets
    shot_review: 05_review/shots

    cg_assetrender: 06_renders/cg/assets/{Asset}/{Step}
    cg_shotrender: 06_renders/cg/shots/{Sequence}/{Shot}
    comp_assetrender: 06_renders/comp/assets/{Asset}/{Step}
    comp_shotrender: 06_renders/comp/shots/{Sequence}/{Shot}
    delivery: 06_renders/delivery/{Sequence}/{Shot}


    ##########################################################################################
    # Project level paths
    #

    #
    # Hiero
    #

    # The location of WIP files
    hiero_project_work:
        definition: '02_source/editorial/work/{projectcode}_{name}_v{version}.hrox'
    hiero_project_work_area:
        definition: '02_source/editorial/work'
    # The location of backups of WIP files
    hiero_project_snapshot:
        definition: '02_source/editorial/work/snapshots/{projectcode}_{name}_v{version}_{timestamp}.hrox'
    # The location of published hiero files
    hiero_project_publish:
        definition: '02_source/editorial/publish/{projectcode}_{name}_v{version}.hrox'
    hiero_project_publish_area:
        definition: '02_source/editorial/publish'

    ##########################################################################################    
        
    # OBJ Sculpts Standalone Publish Template
    obj_asset_publish:
        definition: '@asset_publish/obj/{projectcode}_{Asset}_{Step}_pub_{version}.obj'

    ##########################################################################################
    # Sequence level paths
    #


    ##########################################################################################
    # Shot level paths
    #

    #
    # Flame
    #

    flame_segment_clip:
        definition: '03_workfiles/shots/{Sequence}/{Shot}/finishing/clip/sources/{segment_name}.clip'
    flame_shot_clip:
        definition: '03_workfiles/shots/{Sequence}/{Shot}/finishing/clip/{Shot}.clip'
    flame_shot_batch:
        definition: '03_workfiles/shots/{Sequence}/{Shot}/finishing/batch/{Shot}.v{version}.batch'
    flame_shot_render_dpx:
        definition: '06_renders/comp/shots/{Sequence}/{Shot}/finishing/renders/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.dpx'
    flame_shot_render_exr:
        definition: '06_renders/comp/shots/{Sequence}/{Shot}/finishing/renders/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.exr'
    flame_shot_comp_dpx:
        definition: '06_renders/comp/shots/{Sequence}/{Shot}/finishing/comp/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.dpx'
    flame_shot_comp_exr:
        definition: '06_renders/comp/shots/{Sequence}/{Shot}/finishing/comp/{segment_name}_v{version}/{Shot}_{segment_name}_v{version}.{flame.frame}.exr'

    #
    # Photoshop
    #

    # The location of WIP files
    photoshop_shot_work:
        definition: '@shot_root/photoshop/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.psd'
    shot_work_area_photoshop:
        definition: '@shot_root/photoshop'
    # The location of backups of WIP files
    photoshop_shot_snapshot:
        definition: '@shot_root/photoshop/snapshots/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.psd'
    # The location of published files
    shot_publish_area_photoshop:
        definition: '@shot_publish/photoshop'
    photoshop_shot_publish:
        definition: '@shot_publish/photoshop/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.psd'

    #
    # After Effects
    #

    # The location of WIP files
    aftereffects_shot_work:
        definition: '@shot_root/afx/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.aep'
    shot_work_area_aftereffects:
        definition: '@shot_root/afx'
    # The location of backups of WIP files
    aftereffects_shot_snapshot:
        definition: '@shot_root/afx/snapshots/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.aep'
    # The location of published files
    shot_publish_area_aftereffects:
        definition: '@shot_publish/afx'
    aftereffects_shot_publish:
        definition: '@shot_publish/afx/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.aep'
    aftereffects_shot_render_pub_mono:
        definition: '@shot_root/publish/elements/{name}/v{version}/{width}x{height}/{projectcode}_sc{Sequence}_sh{Shot}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_shot_render_movie:
        definition: '@shot_root/review/{projectcode}_sc{Sequence}_sh{Shot}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'


    #
    # Maya
    #

    # define the location of a work area
    shot_work_area_maya:
        definition: '@shot_root/maya'
    # define the location of a publish area
    shot_publish_area_maya:
        definition: '@shot_publish/maya'
    # The location of WIP files
    maya_shot_work:
        definition: '@shot_root/maya/scenes/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.{maya_extension}'
    # The location of backups of WIP files
    maya_shot_snapshot:
        definition: '@shot_root/maya/snapshots/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.{maya_extension}'
    # The location of playblasts
    maya_shot_playblast:
        definition: '@shot_review/{projectcode}_sc{Sequence}_sh{Shot}_{name}_v{version}.mov'
    # The location of published maya files
    maya_shot_publish:
        definition: '@shot_publish/maya/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.{maya_extension}'


    #
    # Houdini
    #

    # define the location of a work area
    shot_work_area_houdini:
        definition: '@shot_root/houdini'
    # define the location of a publish area
    shot_publish_area_houdini:
        definition: '@shot_publish/houdini'
    # The location of WIP files
    houdini_shot_work:
        definition: '@shot_root/houdini/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.hipnc'
    # The location of backups of WIP files
    houdini_shot_snapshot:
        definition: '@shot_root/houdini/snapshots/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.hipnc'
    # The location of published houdini files
    houdini_shot_publish:
        definition: '@shot_publish/houdini/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.hipnc'
    # Alembic caches
    houdini_shot_work_alembic_cache:
        definition: '@shot_root/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.abc'
    # File work caches
    houdini_shot_work_file_cache:
        definition: '@shot_root/houdini/cache/bgeo/{name}/v{version}/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.{SEQ}.bgeo'
    # File publish caches
    houdini_shot_publish_file_cache:
        definition: '@shot_publish/cache/bgeo/{name}/v{version}/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.{SEQ}.bgeo'

    # Rendered images
    houdini_shot_render:
        definition: '@cg_shotrender/{name}/{houdini.node}/v{version}/{width}x{height}/{projectcode}_sc{Sequence}_sh{Shot}_{name}_v{version}.{SEQ}.exr'

    # Additional mantra outputs
    houdini_shot_ifd:
        definition: '@cg_shotrender/{name}/{houdini.node}/v{version}/{width}x{height}/ifds/{projectcode}_sc{Sequence}_sh{Shot}_{name}_v{version}.{SEQ}.ifd'

    houdini_shot_dcm:
        definition: '@cg_shotrender/{name}/{houdini.node}/v{version}/{width}x{height}/dcms/{projectcode}_sc{Sequence}_sh{Shot}_{name}_v{version}.{SEQ}.dcm'

    houdini_shot_extra_plane:
        definition: '@cg_shotrender/{name}/{houdini.node}/v{version}/{width}x{height}/{aov_name}/{projectcode}_sc{Sequence}_sh{Shot}_{name}_v{version}.{SEQ}.exr'


    #
    # 3dsmax
    #

    # define the location of a work area
    shot_work_area_max:
        definition: '@shot_root/3dsmax'
    # define the location of a publish area
    shot_publish_area_max:
        definition: '@shot_publish/3dsmax'
    # The location of WIP files
    max_shot_work:
        definition: '@shot_root/3dsmax/{name}.v{version}.max'
    # The location of backups of WIP files
    max_shot_snapshot:
        definition: '@shot_root/3dsmax/snapshots/{name}.v{version}.{timestamp}.max'
    # The location of published max files
    max_shot_publish:
        definition: '@shot_publish/3dsmax/{name}.v{version}.max'


    #
    # Motionbuilder
    #

    # define the location of a work area
    shot_work_area_mobu:
        definition: '@shot_root/mobu'
    # define the location of a publish area
    shot_publish_area_mobu:
        definition: '@shot_publish/mobu'
    # The location of WIP files
    mobu_shot_work:
        definition: '@shot_root/mobu/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.fbx'
    # The location of backups of WIP files
    mobu_shot_snapshot:
        definition: '@shot_root/mobu/snapshots/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.fbx'
    # The location of published mobu files
    mobu_shot_publish:
        definition: '@shot_publish/mobu/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.fbx'


    #
    # Nuke
    #

    # define the location of a work area
    shot_work_area_nuke:
        definition: '@shot_root/nuke'
    # define the location of a publish area
    shot_publish_area_nuke:
        definition: '@shot_publish/nuke'
    # The location of WIP script files
    nuke_shot_work:
        definition: '@shot_root/nuke/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_work_{name}_v{version}.nk'
    # The location of backups of WIP files
    nuke_shot_snapshot:
        definition: '@shot_root/nuke/snapshots/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_snap_{name}_v{version}_{timestamp}.nk'
    # The location of published nuke script files
    nuke_shot_publish:
        definition: '@shot_publish/nuke/{projectcode}_sc{Sequence}_sh{Shot}_{Step}_pub_{name}_v{version}.nk'
    # write node outputs
    nuke_shot_render_work:
        definition: '@shot_root/nuke/render/{name}/v{version}/{width}x{height}/{projectcode}_sc{Sequence}_sh{Shot}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
    nuke_shot_render_pub:
        definition: '@comp_shotrender/{name}/v{version}/{width}x{height}/{projectcode}_sc{Sequence}_sh{Shot}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
    # review output
    shot_quicktime_quick:
        definition: '@shot_review/quickdaily/{projectcode}_sc{Sequence}_sh{Shot}_{name}_{nuke.output}_{iteration}.mov'
    nuke_shot_render_movie:
        definition: '@shot_review/{projectcode}_sc{Sequence}_sh{Shot}_{name}_{nuke.output}_v{version}.mov'

    #
    # Hiero
    #

    # export of shot asset data from hiero
    hiero_plate_path:
        definition: '02_source/{Sequence}/{Shot}/{YYYY}_{MM}_{DD}/plates/{project}_{Shot}.mov'
    hiero_render_path:
        definition: '02_source/{Sequence}/{Shot}/{YYYY}_{MM}_{DD}/renders/{project}_{Shot}.{SEQ}.exr'

    ##########################################################################################
    # Asset pipeline


    #
    # Alembic caches
    #

    asset_alembic_cache:
        definition: '@alembic_caches_pub/{projectcode}_{Asset}_{Step}_cache_{name}_v{version}.abc'


    #
    # Photoshop
    #

    # The location of WIP files
    photoshop_asset_work:
        definition: '@asset_root/photoshop/{projectcode}_{Asset}_{Step}_work_{name}_v{version}.psd'
    asset_work_area_photoshop:
        definition: '@asset_root/photoshop'
    # The location of backups of WIP files
    photoshop_asset_snapshot:
        definition: '@asset_root/photoshop/snapshots/{name}.v{version}.{timestamp}.psd'
    # The location of published files
    asset_publish_area_photoshop:
        definition: '@asset_publish/photoshop'
    photoshop_asset_publish:
        definition: '@asset_publish/photoshop/{projectcode}_{Asset}_{Step}_pub_{name}_v{version}.psd'

    #
    # after effects
    #

    # The location of WIP files
    aftereffects_asset_work:
        definition: '@asset_root/afx/{projectcode}_{Asset}_{Step}_work_v{version}.aep'
    asset_work_area_aftereffects:
        definition: '@asset_root/afx'
    # The location of backups of WIP files
    aftereffects_asset_snapshot:
        definition: '@asset_root/afx/snapshots/{projectcode}_{Asset}_{Step}_snap_v{version}_{timestamp}.aep'
    # The location of published files
    asset_publish_area_aftereffects:
        definition: '@asset_publish/afx'
    aftereffects_asset_publish:
        definition: '@asset_publish/afx/{projectcode}_{Asset}_{Step}_pub_v{version}.aep'
    aftereffects_asset_render_pub_mono:
        definition: '@comp_assetrender/{name}/v{version}/{width}x{height}/{projectcode}_{Asset}_{name}_{afx.comp}_v{version}.{SEQ}.tif'
    # The following template uses {afx.mov.ext} this is a special key, that will be only there
    # in the beta to support different extensions on mac and windows, while using the same
    # output module (Lossless with Alpha)
    aftereffects_asset_render_movie:
        definition: '@asset_review/{projectcode}_{Asset}_{name}_{afx.comp}_v{version}.{afx.mov.ext}'


    #
    # Mari
    #
    asset_mari_texture_tif:
        definition: '@asset_publish/mari/{name}_{mari.channel}[_{mari.layer}].v{version}.{UDIM}.tif'

    #
    # Maya
    #

    # define the location of a work area
    asset_work_area_maya:
        definition: '@asset_root/maya'
    # define the location of a publish area
    asset_publish_area_maya:
        definition: '@asset_publish/maya'
    # The location of WIP files
    maya_asset_work:
        definition: '@asset_root/maya/scenes/{projectcode}_{Asset}_{Step}_{name}_work_v{version}.{maya_extension}'
    # The location of backups of WIP files
    maya_asset_snapshot:
        definition: '@asset_root/maya/snapshots/{projectcode}_{Asset}_{Step}_{name}_snap_v{version}_{timestamp}.{maya_extension}'
    # The location of published maya files
    maya_asset_publish:
        definition: '@asset_publish/maya/{projectcode}_{Asset}_{Step}_{name}_pub_v{version}.{maya_extension}'


    #
    # Houdini
    #

    # define the location of a work area
    asset_work_area_houdini:
        definition: '@asset_root/houdini'
    # define the location of a publish area
    asset_publish_area_houdini:
        definition: '@asset_publish/houdini'
    # The location of WIP files
    houdini_asset_work:
        definition: '@asset_root/houdini/{projectcode}_{Asset}_{Step}_work_{name}_v{version}.hipnc'
    # The location of backups of WIP files
    houdini_asset_snapshot:
        definition: '@asset_root/houdini/snapshots/{projectcode}_{Asset}_{Step}_snap_{name}_v{version}_{timestamp}.hipnc'
    # The location of published houdini files
    houdini_asset_publish:
        definition: '@asset_publish/houdini/{projectcode}_{Asset}_{Step}_{name}_pub_{name}_v{version}.hipnc'
    # Alembic caches
    houdini_asset_work_alembic_cache:
        definition: '@asset_root/houdini/cache/alembic/{name}/{houdini.node}/v{version}/{projectcode}_{Asset}_{Step}_work_v{version}.abc'
    # File work caches
    houdini_asset_work_file_cache:
        definition: '@asset_root/houdini/cache/bgeo/{name}/v{version}/{projectcode}_{Asset}_{Step}_work_{name}_v{version}.{SEQ}.bgeo'
    # File publish caches
    houdini_asset_publish_file_cache:
        definition: '@asset_publish/cache/bgeo/{name}/v{version}/{projectcode}_{Asset}_{Step}_pub_{name}_v{version}.{SEQ}.bgeo'

    # Rendered images
    houdini_asset_render:
        definition: '@cg_assetrender/{name}/{houdini.node}/v{version}/{width}x{height}/{projectcode}_{Asset}_{Step}_{name}_v{version}.{SEQ}.exr'

    # Additional mantra outputs
    houdini_asset_ifd:
        definition: '@cg_assetrender/{name}/{houdini.node}/v{version}/{width}x{height}/ifds/{projectcode}_{Asset}_{Step}_{name}_v{version}.{SEQ}.ifd'

    houdini_asset_dcm:
        definition: '@cg_assetrender/{name}/{houdini.node}/v{version}/{width}x{height}/dcms/{projectcode}_{Asset}_{Step}_{name}_v{version}.{SEQ}.dcm'

    houdini_asset_extra_plane:
        definition: '@cg_assetrender/{name}/{houdini.node}/v{version}/{width}x{height}/{aov_name}/{projectcode}_{Asset}_{Step}_{aov_name}_{name}_v{version}.{SEQ}.exr'


    #
    # 3dsmax
    #

    # define the location of a work area
    asset_work_area_max:
        definition: '@asset_root/3dsmax'
    # define the location of a publish area
    asset_publish_area_max:
        definition: '@asset_publish/3dsmax'
    # The location of WIP files
    max_asset_work:
        definition: '@asset_root/3dsmax/{name}.v{version}.max'
    # The location of backups of WIP files
    max_asset_snapshot:
        definition: '@asset_root/3dsmax/snapshots/{name}.v{version}.{timestamp}.max'
    # The location of published max files
    max_asset_publish:
        definition: '@asset_publish/3dsmax/{name}.v{version}.max'


    #
    # Motionbuilder
    #

    # define the location of a work area
    asset_work_area_mobu:
        definition: '@asset_root/mobu'
    # define the location of a publish area
    asset_publish_area_mobu:
        definition: '@asset_publish/mobu'
    # The location of WIP files
    mobu_asset_work:
        definition: '@asset_root/mobu/{name}.v{version}.fbx'
    # The location of backups of WIP files
    mobu_asset_snapshot:
        definition: '@asset_root/mobu/snapshots/{name}.v{version}.{timestamp}.fbx'
    # The location of published Motionbuilder files
    mobu_asset_publish:
        definition: '@asset_publish/mobu/{name}.v{version}.fbx'


    #
    # Nuke
    #

    # define the location of a work area
    asset_work_area_nuke:
        definition: '@asset_root/work/nuke'
    # define the location of a publish area
    asset_publish_area_nuke:
        definition: '@asset_root/publish'
    # outputs from the Shotgun Write Node for assets
    nuke_asset_render:
        definition: '@asset_root/renders/{name}/v{version}/{width}x{height}/{projectcode}_{Asset}_{Step}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
    nuke_asset_render_pub:
        definition: '@comp_assetrender/{name}/v{version}/{width}x{height}/{projectcode}_{Asset}_{Step}_{name}_{nuke.output}_v{version}.{SEQ}.exr'
    # review output
    nuke_asset_render_movie:
        definition: '@asset_review/{projectcode}_{Asset}_{Step}_{name}_{nuke.output}_v{version}.mov'
    asset_quicktime_quick:
        definition: '@asset_review/quickdaily/{projectcode}_{Asset}_{Step}_{name}_{iteration}.mov'
    # The location of WIP script files
    nuke_asset_work:
        definition: '@asset_root/nuke/{projectcode}_{Asset}_{Step}_{name}_work_v{version}.nk'
    # The location of backups of WIP files
    nuke_asset_snapshot:
        definition: '@asset_root/nuke/snapshots/{projectcode}_{Asset}_{Step}_{name}_snap_v{version}_{timestamp}.nk'
    # The location of published nuke script files
    nuke_asset_publish:
        definition: '@asset_publish/nuke/{projectcode}_{Asset}_{Step}_{name}_pub_v{version}.nk'

    #
    # Alias
    #

    # define the location of a work area
    asset_work_area_alias:
        definition: '@asset_root/alias'
    # define the location of a publish area
    asset_publish_area_alias:
        definition: '@asset_root/publish/alias'
    # The location of WIP files
    alias_asset_work:
        definition: '@asset_root/alias/{name}.v{version}.wire'
    # The location of backups of WIP files
    alias_asset_snapshot:
        definition: '@asset_root/alias/snapshots/{name}.v{version}.{timestamp}.wire'
    # The location of published Alias files
    alias_asset_publish:
        definition: '@asset_publish/alias/{name}.v{version}.wire'

    # Alias translations

    alias_asset_igs_publish:
        definition: '@asset_publish/alias/translations/{name}.v{version}.igs'
    alias_asset_catpart_publish:
        definition: '@asset_publish/alias/translations/{name}.v{version}.CATPart'
    alias_asset_jt_publish:
        definition: '@asset_publish/alias/translations/{name}.v{version}.jt'
    alias_asset_stp_publish:
        definition: '@asset_publish/alias/translations/{name}.v{version}.stp'
    alias_asset_wref_publish:
        definition: '@asset_publish/alias/translations/{name}.v{version}.wref'

    #
    # VRED
    #

    # define the location of a work area
    asset_work_area_vred:
        definition: '@asset_root/vred'
    # define the location of a publish area
    asset_publish_area_vred:
        definition: '@asset_publish/vred'
    # The location of WIP files
    vred_asset_work:
        definition: '@asset_root/vred/{name}.v{version}.{vred.extension}'
    # The location of backups of WIP files
    vred_asset_snapshot:
        definition: '@asset_root/vred/snapshots/{name}.v{version}.{timestamp}.{vred.extension}'
    # The location of published VRED files
    vred_asset_publish:
        definition: '@asset_publish/vred/{name}.v{version}.{vred.extension}'

    # define the location of VRED geometry published files
    vred_asset_geometry_publish:
        definition: '@asset_publish/vred/geometry/{name}.v{version}.osb'

    # define the location of the WIP render images
    vred_asset_render_work:
        definition: '@asset_root/images/{name}/v{version}/{Asset}_{name}_v{version}[-{vred.render_pass}].{vred.render_extension}'

    # define the location of the WIP renderings for an image sequence
    vred_asset_render_sequence_work:
        definition: '@asset_root/render/{name}/v{version}/{Asset}_{name}_v{version}[-{vred.render_pass}]-{vred.frame}.{vred.render_extension}'

    # define the location of the published render images
    vred_asset_render_publish:
        definition: '@cg_assetrender/{name}/v{version}/{Asset}_{name}_v{version}[-{vred.render_pass}].{vred.render_extension}'

    # define the location of the published renderings for an image sequence
    vred_asset_render_sequence_publish:
        definition: '@cg_assetrender/{name}/v{version}/{Asset}_{name}_v{version}[-{vred.render_pass}]-{vred.frame}.{vred.render_extension}'


#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:

    # when a review Version in Shotgun is created inside of Nuke, this is the
    # name that is being given to it (the code field)
    nuke_shot_version_name: "{Shot}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_shot_version_name: "{Shot}_{name}_quick_{iteration}"

    nuke_asset_version_name: "{Asset}_{name}_{nuke.output}_v{version}.{iteration}"
    nuke_quick_asset_version_name: "{Asset}_{name}_quick_{iteration}"

    # defines how the {tk_version} token in Hiero gets formatted back to tk.
    hiero_version: "{version}"

    # define how new Mari projects should be named
    mari_asset_project_name: "{mari.project_name} - Asset {asset_name}, {task_name}"
