# MIT License
#
# Copyright (c) 2024 Netherlands Film Academy
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

#
# The keys section contains the definitions for all the different keys that are being
# used by Sgtk. A key is a magic token that is replaced by a value at runtime, for example
# {Shot}. The section below tells Sgtk which data types and formats to expect for each key.
#
keys:
  Sequence:
    type: str
  Shot:
    type: str
  Step:
    type: str
  sg_asset_type:
    type: str
  Asset:
    type: str
  Projectcode:
    type: str
    shotgun_entity_type: Project
    shotgun_field_name: sg_projectcode
  name:
    type: str
    filter_by: alphanumeric
  iteration:
    type: int
  version:
    type: int
    format_spec: "03"
  version_four:
    type: int
    format_spec: "04"
    alias: version
  timestamp:
    type: str
  width:
    type: int
  height:
    type: int
  colorspace:
    type: int
  SEQ:
    type: sequence
    format_spec: "04"

  # Represents the optional output name for frames written by the ShotGrid Write Node
  write.output:
    alias: output
    type: str
    filter_by: alphanumeric

#
# The paths section contains all the the key locations where files are to be stored
# by Sgtk Apps. Each path is made up of several keys (like {version} or {shot}) and
# these are defined in the keys section above.
#
# Apps use these paths as part of their configuration to define where on disk
# different files should go.
#

paths:
  # Common  path definitions to use as shorthand in order to avoid repetitive and verbose
  # templates. This also makes it easy to change any of the common root paths and have the
  # changes apply to all templates that use them.
  #
  # These don't require the standard formatting (with definition and root_name) because they
  # will be set within each template that uses the alias.
  asset_root: 03_workfiles/assets/{Asset}/{Step}
  shot_root: 03_workfiles/shots/{Sequence}/{Shot}/{Step}

  sequence_root: 03_workfiles/shots/{Sequence}

  asset_publish: 04_publish/assets/{Asset}/{Step}
  shot_publish: 04_publish/shots/{Sequence}/{Shot}/{Step}

  asset_render_publish: 05_renders/assets/{Asset}/{Step}
  shot_render_publish: 05_renders/shots/{Sequence}/{Shot}/{Step}


  ##########################################################################################
  # Project level paths
  #

  # OCIO config path
  ocio_config:
    definition: "00_pipeline/ocio/config.ocio"

  # USD paths
  usd_asset_publish:
    definition: "@asset_publish/usd/{name}/v{version}/{Projectcode}_{Asset}_{Step}_{name}_v{version}.usd"
  usd_shot_publish:
    definition: "@shot_publish/usd/{name}/v{version}/{Projectcode}_{Shot}_{Step}_{name}_v{version}.usd"

  # OBJ Sculpts Standalone Publish Template
  obj_asset_publish:
    definition: "@asset_publish/obj/{Projectcode}_{Asset}_{Step}_pub_v{version}.obj"

  ##########################################################################################
  # Sequence level paths
  #

  ##########################################################################################
  # Shot level paths
  #

  # Review files
  shot_review_maya:
    definition: "@shot_root/maya/previews/{name}/{Projectcode}_{Sequence}_{Shot}_{name}_sRGB_v{version}.mov"
  shot_review_houdini:
    definition: "@shot_root/houdini/previews/{name}/{Projectcode}_{Sequence}_{Shot}_{name}_sRGB_v{version}.mov"

  ##########################################################################################
  # Asset pipeline

  # Review files
  asset_review_maya:
    definition: "@asset_root/maya/previews/{name}/{Projectcode}_{Asset}_{Step}_{name}_sRGB_v{version}.mov"
  asset_review_houdini:
    definition: "@asset_root/houdini/previews/{name}/{Projectcode}_{Asset}_{Step}_{name}_sRGB_v{version}.mov"



#
# The strings section is similar to the paths section - but rather than defining paths
# on disk, it contains a list of strings. Strings are typically used when you want to be
# able to configure the way data is written to shotgun - it may be the name field for a
# review version or the formatting of a publish.
#

strings:
  deadline_asset_batch_name: "{Projectcode} {Asset}"
  deadline_shot_batch_name: "{Projectcode} {Sequence} {Shot}"
